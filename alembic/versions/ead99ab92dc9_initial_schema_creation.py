"""Initial schema creation

Revision ID: ead99ab92dc9
Revises: 
Create Date: 2025-08-11 13:20:31.750852

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ead99ab92dc9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category_accessories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('checklist_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('colors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('color_name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('counterparties',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.Column('contact_details', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('currency',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('financial_snapshots',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('snapshot_date', sa.DateTime(), nullable=False),
    sa.Column('cash_balance', sa.Numeric(), nullable=False),
    sa.Column('inventory_value', sa.Numeric(), nullable=False),
    sa.Column('goods_in_transit_value', sa.Numeric(), nullable=False),
    sa.Column('total_assets', sa.Numeric(), nullable=False),
    sa.Column('details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model_name',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model_number',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('operation_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('product_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shops',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('storage',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('storage', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplier',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('contact_info', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('traffic_sources',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('accessories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category_accessory_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('barcode', sa.String(length=255), nullable=True),
    sa.Column('purchase_price', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['category_accessory_id'], ['category_accessories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cash_flow',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.TIMESTAMP(), nullable=True),
    sa.Column('operation_categories_id', sa.Integer(), nullable=True),
    sa.Column('counterparty_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['counterparty_id'], ['counterparties.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['operation_categories_id'], ['operation_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('number', sa.String(length=255), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('referrer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['referrer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['traffic_sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('models',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_name_id', sa.Integer(), nullable=True),
    sa.Column('storage_id', sa.Integer(), nullable=True),
    sa.Column('color_id', sa.Integer(), nullable=True),
    sa.Column('image_url', sa.String(length=512), nullable=True),
    sa.ForeignKeyConstraint(['color_id'], ['colors.id'], ),
    sa.ForeignKeyConstraint(['model_name_id'], ['model_name.id'], ),
    sa.ForeignKeyConstraint(['storage_id'], ['storage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplier_orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('order_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('ЗАКАЗ', 'В_ПУТИ', 'ПОЛУЧЕН', name='statusdelivery', native_enum=False), nullable=True),
    sa.Column('payment_status', sa.Enum('НЕ_ОПЛАЧЕН', 'ЧАСТИЧНО_ОПЛАЧЕН', 'ОПЛАЧЕН', name='orderpaymentstatus', native_enum=False), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['supplier.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('accessories_model',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('accessory_id', sa.Integer(), nullable=True),
    sa.Column('model_name_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['accessory_id'], ['accessories.id'], ),
    sa.ForeignKeyConstraint(['model_name_id'], ['model_name.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee_shifts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('shift_start', sa.DateTime(), nullable=False),
    sa.Column('shift_end', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('completed_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['completed_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payroll',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('phones',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('serial_number', sa.String(length=255), nullable=True),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('supplier_order_id', sa.Integer(), nullable=True),
    sa.Column('model_number_id', sa.Integer(), nullable=True),
    sa.Column('purchase_price', sa.Numeric(), nullable=True),
    sa.Column('technical_status', sa.Enum('ОЖИДАЕТ_ПРОВЕРКУ', 'НА_ТЕСТЕ_АККУМУЛЯТОРА', 'НА_УПАКОВКЕ', 'УПАКОВАН', 'БРАК', 'НА_ПРОВЕРКЕ', name='techstatus', native_enum=False), nullable=True),
    sa.Column('commercial_status', sa.Enum('НЕ_ГОТОВ_К_ПРОДАЖЕ', 'НА_СКЛАДЕ', 'ПРОДАН', 'ВОЗВРАТ', 'В_РЕМОНТЕ', 'ОТПРАВЛЕН_ПОСТАВЩИКУ', 'СПИСАН_ПОСТАВЩИКОМ', 'ПОДМЕННЫЙ_ФОНД', 'ВЫДАН_КАК_ПОДМЕННЫЙ', 'ОТПРАВЛЕН_КЛИЕНТУ', name='commercestatus', native_enum=False), nullable=True),
    sa.Column('added_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.ForeignKeyConstraint(['model_number_id'], ['model_number.id'], ),
    sa.ForeignKeyConstraint(['supplier_order_id'], ['supplier_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('retail_price_accessories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('accessory_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.Column('date', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['accessory_id'], ['accessories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('retail_prices_phones',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.Column('date', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sales',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sale_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('delivery_method', sa.String(length=255), nullable=True),
    sa.Column('discount', sa.Numeric(), nullable=True),
    sa.Column('payment_status', sa.Enum('ОЖИДАНИЕ_ОПЛАТЫ', 'ЧАСТИЧНО_ОПЛАЧЕН', 'ОПЛАЧЕН', 'ОТМЕНА', name='statuspay', native_enum=False), nullable=True),
    sa.Column('total_amount', sa.Numeric(), nullable=True),
    sa.Column('cash_received', sa.Numeric(), nullable=True),
    sa.Column('change_given', sa.Numeric(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplier_order_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=True),
    sa.Column('accessory_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.Column('supplier_order_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['accessory_id'], ['accessories.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['models.id'], ),
    sa.ForeignKeyConstraint(['supplier_order_id'], ['supplier_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('waiting_room',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('accessory_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['accessory_id'], ['accessories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('warehouse',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_type_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('shop_id', sa.Integer(), nullable=True),
    sa.Column('storage_location', sa.Enum('СКЛАД', 'ВИТРИНА', 'ПОДМЕННЫЙ_ФОНД', name='enumshop', native_enum=False), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('added_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_type_id'], ['product_type.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_inspection',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('phone_id', sa.Integer(), nullable=True),
    sa.Column('inspection_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['phone_id'], ['phones.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('phone_movement_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('phone_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('event_type', sa.Enum('ПОСТУПЛЕНИЕ_ОТ_ПОСТАВЩИКА', 'ИНСПЕКЦИЯ_ПРОЙДЕНА', 'ОБНАРУЖЕН_БРАК', 'ПРИНЯТ_НА_СКЛАД', 'ПРОДАН', 'ВОЗВРАТ_ОТ_КЛИЕНТА', 'ОТПРАВЛЕН_ПОСТАВЩИКУ', 'ПОЛУЧЕН_ОТ_ПОСТАВЩИКА', 'ОТПРАВЛЕН_В_РЕМОНТ', 'ПОЛУЧЕН_ИЗ_РЕМОНТА', 'ОБМЕНЕН', 'ПЕРЕМЕЩЕНИЕ', 'ВЫДАН_КАК_ПОДМЕННЫЙ', 'ПРИНЯТ_ИЗ_ПОДМЕНЫ', name='phoneeventtype', native_enum=False), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['phone_id'], ['phones.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repairs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('phone_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('repair_type', sa.Enum('ГАРАНТИЙНЫЙ', 'ПЛАТНЫЙ', name='repairtype', native_enum=False), nullable=False),
    sa.Column('estimated_cost', sa.Numeric(), nullable=True),
    sa.Column('final_cost', sa.Numeric(), nullable=True),
    sa.Column('service_cost', sa.Numeric(), nullable=True),
    sa.Column('payment_status', sa.Enum('ОЖИДАНИЕ_ОПЛАТЫ', 'ЧАСТИЧНО_ОПЛАЧЕН', 'ОПЛАЧЕН', 'ОТМЕНА', name='statuspay', native_enum=False), nullable=True),
    sa.Column('date_accepted', sa.DateTime(), nullable=False),
    sa.Column('customer_name', sa.String(length=255), nullable=False),
    sa.Column('customer_phone', sa.String(length=50), nullable=False),
    sa.Column('problem_description', sa.Text(), nullable=False),
    sa.Column('device_condition', sa.Text(), nullable=False),
    sa.Column('included_items', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('date_returned', sa.DateTime(), nullable=True),
    sa.Column('work_performed', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['phone_id'], ['phones.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sale_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=True),
    sa.Column('warehouse_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Numeric(), nullable=True),
    sa.Column('profit', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouse.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sale_payments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('payment_method', sa.Enum('НАЛИЧНЫЕ', 'КАРТА', 'КРЕДИТ_РАССРОЧКА', 'ПЕРЕВОД', 'КРИПТОВАЛЮТА', name='enumpayment'), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('battery_test',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('device_inspection_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('start_battery_level', sa.Integer(), nullable=True),
    sa.Column('end_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('end_battery_level', sa.Integer(), nullable=True),
    sa.Column('test_duration', sa.Interval(), nullable=True),
    sa.Column('battery_drain', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['device_inspection_id'], ['device_inspection.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inspection_results',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('device_inspection_id', sa.Integer(), nullable=True),
    sa.Column('checklist_item_id', sa.Integer(), nullable=True),
    sa.Column('result', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['checklist_item_id'], ['checklist_items.id'], ),
    sa.ForeignKeyConstraint(['device_inspection_id'], ['device_inspection.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('loaner_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('repair_id', sa.Integer(), nullable=False),
    sa.Column('loaner_phone_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date_issued', sa.DateTime(), nullable=False),
    sa.Column('date_returned', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['loaner_phone_id'], ['phones.id'], ),
    sa.ForeignKeyConstraint(['repair_id'], ['repairs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('loaner_log')
    op.drop_table('inspection_results')
    op.drop_table('battery_test')
    op.drop_table('sale_payments')
    op.drop_table('sale_details')
    op.drop_table('repairs')
    op.drop_table('phone_movement_log')
    op.drop_table('device_inspection')
    op.drop_table('warehouse')
    op.drop_table('waiting_room')
    op.drop_table('supplier_order_details')
    op.drop_table('sales')
    op.drop_table('retail_prices_phones')
    op.drop_table('retail_price_accessories')
    op.drop_table('phones')
    op.drop_table('payroll')
    op.drop_table('notes')
    op.drop_table('employee_shifts')
    op.drop_table('accessories_model')
    op.drop_table('users')
    op.drop_table('supplier_orders')
    op.drop_table('role_permissions')
    op.drop_table('models')
    op.drop_table('customers')
    op.drop_table('cash_flow')
    op.drop_table('accessories')
    op.drop_table('traffic_sources')
    op.drop_table('supplier')
    op.drop_table('storage')
    op.drop_table('shops')
    op.drop_table('roles')
    op.drop_table('product_type')
    op.drop_table('permissions')
    op.drop_table('operation_categories')
    op.drop_table('model_number')
    op.drop_table('model_name')
    op.drop_table('financial_snapshots')
    op.drop_table('currency')
    op.drop_table('counterparties')
    op.drop_table('colors')
    op.drop_table('checklist_items')
    op.drop_table('category_accessories')
    op.drop_table('accounts')
    # ### end Alembic commands ###
